{"ast":null,"code":"var _jsxFileName = \"/home/chico/movie-app/movie/app/javascript/components/Main.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// =============================\n// DEPENDENCIES\n// =============================\n// packages\nimport React from 'react'; // components\n// =============================\n// COMPONENT CLASS\n// =============================\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n\n    _this.fetchMovies = function () {\n      fetch('/movies').then(function (data) {\n        return data.json();\n      }).then(function (jData) {\n        _this.setState({\n          movies: jData\n        });\n      });\n    };\n\n    _this.handleCreate = function (createData) {\n      fetch('/posts', {\n        body: JSON.stringify(createData),\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (createdPost) {\n        return createdPost.json();\n      }).then(function (jsonedPost) {\n        // change to home view\n        _this.props.handleView('home');\n\n        _this.setState(function (prevState) {\n          prevState.posts.push(jsonedPost);\n          return {\n            posts: prevState.posts\n          };\n        });\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleUpdate = function (updateData) {\n      fetch(\"/posts/\".concat(updateData.id), {\n        body: JSON.stringify(updateData),\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (updatedMovies) {\n        // switch back to the home view after editing a post\n        _this.props.handleView('home'); // for simplicity's sake, we'll just make an extra AJAX call to automatically load the post this time!\n        // if you're up for a challenge though, try and see if you can figure out how to do it without an extra call\n\n\n        _this.fetchMovies();\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      fetch(\"/movies/\".concat(id), {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (json) {\n        _this.setState(function (prevState) {\n          var movies = prevState.movies.filter(function (movies) {\n            return movies.id !== id;\n          });\n          return {\n            movies: movies\n          };\n        });\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      movies: []\n    };\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchMovies();\n    }\n  }, {\n    key: \"render\",\n    // ==============\n    // RENDER\n    // ==============\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.props.view.pageTitle), this.props.view.page === 'home' ? this.state.movies.map(function (postData) {\n        return React.createElement(Movie, {\n          key: postData.id,\n          postData: postData,\n          handleView: _this2.props.handleView,\n          handleDelete: _this2.handleDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        });\n      }) : React.createElement(Form, {\n        handleCreate: this.handleCreate,\n        handleUpdate: this.handleUpdate,\n        formInputs: this.props.formInputs,\n        view: this.props.view,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(React.Component); // =============================\n// EXPORT\n// =============================\n\n\nexport default Main;","map":{"version":3,"sources":["/home/chico/movie-app/movie/app/javascript/components/Main.js"],"names":["React","Main","props","fetchMovies","fetch","then","data","json","jData","setState","movies","handleCreate","createData","body","JSON","stringify","method","headers","createdPost","jsonedPost","handleView","prevState","posts","push","err","console","log","handleUpdate","updateData","id","updatedMovies","handleDelete","filter","state","view","pageTitle","page","map","postData","formInputs","Component"],"mappings":"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","sourcesContent":["// =============================\n// DEPENDENCIES\n// =============================\n// packages\nimport React from 'react'\n\n// components\n\n\n// =============================\n// COMPONENT CLASS\n// =============================\n\n\n\nclass Main extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      movies: []\n    }\n  }\n\n\n  fetchMovies = () => {\n    fetch('/movies')\n      .then(data => data.json())\n      .then(jData => {\n        this.setState({movies: jData})\n      })\n  }\n\n\n//Create New post\nhandleCreate = (createData) => {\n  fetch('/posts', {\n    body: JSON.stringify(createData),\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(createdPost => {\n      return createdPost.json()\n    })\n    .then(jsonedPost => {\n      // change to home view\n this.props.handleView('home')\n      this.setState(prevState => {\n  prevState.posts.push(jsonedPost)\n  return { posts: prevState.posts }\n})\n    })\n  .catch(err => console.log(err))\n}\n\n//update post\n\nhandleUpdate = (updateData) => {\n  fetch(`/posts/${updateData.id}`, {\n    body: JSON.stringify(updateData),\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(updatedMovies => {\n      // switch back to the home view after editing a post\n      this.props.handleView('home')\n      // for simplicity's sake, we'll just make an extra AJAX call to automatically load the post this time!\n      // if you're up for a challenge though, try and see if you can figure out how to do it without an extra call\n      this.fetchMovies()\n    })\n    .catch(err => console.log(err))\n}\n\n  componentDidMount() {\n  this.fetchMovies()\n}\n\nhandleDelete = (id) => {\n  fetch(`/movies/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(json => {\n      this.setState(prevState => {\n    const movies = prevState.movies.filter(movies => movies.id !== id)\n    return { movies }\n  })\n    })\n    .catch(err => console.log(err))\n}\n  // ==============\n  // RENDER\n  // ==============\n  render () {\n    return (\n      <main>\n      <h1>{this.props.view.pageTitle}</h1>\n      { this.props.view.page === 'home'\n      ? this.state.movies.map((postData) => (\n        <Movie\n          key={postData.id}\n          postData={postData}\n          handleView={this.props.handleView}\n          handleDelete={this.handleDelete}\n        />\n        ))\n      :<Form\n  handleCreate={this.handleCreate}\n  handleUpdate={this.handleUpdate}\n  formInputs={this.props.formInputs}\n  view={this.props.view}\n/>\n        }\n\n      </main>\n    )\n  }\n}\n// =============================\n// EXPORT\n// =============================\nexport default Main\n"]},"metadata":{},"sourceType":"module"}