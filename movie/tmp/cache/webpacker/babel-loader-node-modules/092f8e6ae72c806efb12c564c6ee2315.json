{"ast":null,"code":"var _jsxFileName = \"/home/chico/movie-app/movie/app/javascript/components/Main.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// =============================\n// DEPENDENCIES\n// =============================\n// packages\nimport React from 'react';\nimport Form from './Form.js';\nimport Movie from './Movie.js';\nimport MovieInfo from './MovieInfo.js'; // components\n// =============================\n// COMPONENT CLASS\n// =============================\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n\n    _this.fetchMovies = function () {\n      fetch('/movies').then(function (data) {\n        return data.json();\n      }).then(function (jData) {\n        _this.setState({\n          movies: jData\n        });\n      });\n    };\n\n    _this.handleCreate = function (createData) {\n      fetch('/movies', {\n        body: JSON.stringify(createData),\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (createdPost) {\n        return createdPost.json();\n      }).then(function (jsonedPost) {\n        // change to home view\n        _this.props.handleView('home');\n\n        _this.setState(function (prevState) {\n          prevState.movies.push(jsonedPost);\n          return {\n            movies: prevState.movies\n          };\n        });\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleUpdate = function (updateData) {\n      fetch(\"/movies/\".concat(updateData.id), {\n        body: JSON.stringify(updateData),\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (updatedMovies) {\n        // switch back to the home view after editing a post\n        _this.props.handleView('home'); // for simplicity's sake, we'll just make an extra AJAX call to automatically load the post this time!\n        // if you're up for a challenge though, try and see if you can figure out how to do it without an extra call\n\n\n        _this.fetchMovies();\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      fetch(\"/movies/\".concat(id), {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (json) {\n        _this.setState(function (prevState) {\n          var movies = prevState.movies.filter(function (movies) {\n            return movies.id !== id;\n          });\n          return {\n            movies: movies\n          };\n        });\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      baseURL: 'http://www.omdbapi.com/?',\n      apikey: 'apikey=' + '98e3fb1f',\n      query: '&t=',\n      movieTitle: '',\n      searchURL: '',\n      movies: []\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.id, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      this.setState({\n        searchURL: this.state.baseURL + this.state.apikey + this.state.query + this.state.movieTitle\n      }, function () {\n        fetch(_this2.state.searchURL).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          return _this2.setState({\n            movie: json,\n            movieTitle: ''\n          });\n        }, function (err) {\n          return console.log(err);\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchMovies();\n    }\n  }, {\n    key: \"render\",\n    // ==============\n    // RENDER\n    // ==============\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"omdb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.props.view.pageTitle), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"movieTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"input\", {\n        id: \"movieTitle\",\n        type: \"text\",\n        value: this.state.movieTitle,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Find Movie Info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), this.state.movie ? React.createElement(MovieInfo, {\n        movie: this.state.movie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }) : null)), this.props.view.page === 'home' ? this.state.movies.map(function (postData) {\n        return React.createElement(Movie, {\n          key: postData.id,\n          postData: postData,\n          handleView: _this3.props.handleView,\n          handleDelete: _this3.handleDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        });\n      }) : React.createElement(Form, {\n        handleCreate: this.handleCreate,\n        handleUpdate: this.handleUpdate,\n        formInputs: this.props.formInputs,\n        view: this.props.view,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(React.Component); // =============================\n// EXPORT\n// =============================\n\n\nexport default Main;","map":{"version":3,"sources":["/home/chico/movie-app/movie/app/javascript/components/Main.js"],"names":["React","Form","Movie","MovieInfo","Main","props","fetchMovies","fetch","then","data","json","jData","setState","movies","handleCreate","createData","body","JSON","stringify","method","headers","createdPost","jsonedPost","handleView","prevState","push","err","console","log","handleUpdate","updateData","id","updatedMovies","handleDelete","filter","state","baseURL","apikey","query","movieTitle","searchURL","handleSubmit","bind","handleChange","event","target","value","preventDefault","response","movie","view","pageTitle","page","map","postData","formInputs","Component"],"mappings":"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","sourcesContent":["// =============================\n// DEPENDENCIES\n// =============================\n// packages\nimport React from 'react'\nimport Form from './Form.js'\nimport Movie from './Movie.js'\nimport MovieInfo from './MovieInfo.js'\n// components\n\n\n// =============================\n// COMPONENT CLASS\n// =============================\n\n\n\nclass Main extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      baseURL: 'http://www.omdbapi.com/?',\n  apikey: 'apikey=' + '98e3fb1f',\n  query: '&t=',\n  movieTitle: '',\n  searchURL: '',\n      movies: []\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\nthis.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange (event) {\n    this.setState({ [event.target.id]: event.target.value })\n  }\n  handleSubmit (event) {\n    event.preventDefault()\n    this.setState({\n      searchURL: this.state.baseURL + this.state.apikey + this.state.query + this.state.movieTitle\n    }, () => {\n      fetch(this.state.searchURL)\n        .then(response => {\n          return response.json()\n        }).then(json => this.setState({\n          movie: json,\n          movieTitle: ''\n        }),\n        err => console.log(err))\n    })\n  }\n\n\n\n\nfetchMovies = () => {\n  fetch('/movies')\n    .then(data => data.json())\n    .then(jData => {\n      this.setState({movies: jData})\n    })\n}\n\n//Create New post\nhandleCreate = (createData) => {\n  fetch('/movies', {\n    body: JSON.stringify(createData),\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    }\n  })\n  .then(createdPost => {\n    return createdPost.json()\n  })\n  .then(jsonedPost => {\n    // change to home view\nthis.props.handleView('home')\n    this.setState(prevState => {\nprevState.movies.push(jsonedPost)\nreturn { movies: prevState.movies }\n})\n  })\n.catch(err => console.log(err))\n}\n\n//update post\n\nhandleUpdate = (updateData) => {\n  fetch(`/movies/${updateData.id}`, {\n    body: JSON.stringify(updateData),\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(updatedMovies => {\n      // switch back to the home view after editing a post\n      this.props.handleView('home')\n      // for simplicity's sake, we'll just make an extra AJAX call to automatically load the post this time!\n      // if you're up for a challenge though, try and see if you can figure out how to do it without an extra call\n      this.fetchMovies()\n    })\n    .catch(err => console.log(err))\n}\n\n  componentDidMount() {\n  this.fetchMovies()\n}\n\nhandleDelete = (id) => {\n  fetch(`/movies/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(json => {\n      this.setState(prevState => {\n    const movies = prevState.movies.filter(movies => movies.id !== id)\n    return { movies }\n  })\n    })\n    .catch(err => console.log(err))\n}\n  // ==============\n  // RENDER\n  // ==============\n  render () {\n    return (\n\n      <main>\n      <div className=\"omdb\">\n      <React.Fragment>\n    <h1>{this.props.view.pageTitle}</h1>\n\n    <form onSubmit={this.handleSubmit}>\n      <label htmlFor='movieTitle'>Title</label>\n      <input\n        id='movieTitle'\n        type='text'\n        value={this.state.movieTitle}\n        onChange={this.handleChange}\n      />\n      <input\n        type='submit'\n        value='Find Movie Info'\n      />\n    </form>\n    {(this.state.movie)\n      ? <MovieInfo movie={this.state.movie} />\n      : null\n    }\n  </React.Fragment>\n  </div>\n\n      { this.props.view.page === 'home'\n      ? this.state.movies.map((postData) => (\n        <Movie\n          key={postData.id}\n          postData={postData}\n          handleView={this.props.handleView}\n          handleDelete={this.handleDelete}\n        />\n        ))\n      :<Form\n          handleCreate={this.handleCreate}\n          handleUpdate={this.handleUpdate}\n          formInputs={this.props.formInputs}\n          view={this.props.view}\n        />\n\n        }\n\n      </main>\n    )\n  }\n}\n// =============================\n// EXPORT\n// =============================\nexport default Main\n"]},"metadata":{},"sourceType":"module"}